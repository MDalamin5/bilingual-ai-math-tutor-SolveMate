import streamlit as st
import os
from langchain_core.messages import HumanMessage, AIMessage
from dotenv import load_dotenv
from langchain_groq import ChatGroq
from langchain_community.chat_message_histories import ChatMessageHistory
from langchain_core.runnables.history import RunnableWithMessageHistory
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
import time

load_dotenv()
# groq_api_key = os.getenv("GROQ_API_KEY")
groq_api_key = st.secrets["GROQ_API_KEY"]

os.environ["LANGCHAIN_API_KEY"] = st.secrets.get("LANGCHAIN_API_KEY", "") # for cloud
# os.environ["LANGCHAIN_API_KEY"] = os.getenv("LANGCHAIN_API_KEY") # for local machine
os.environ["LANGCHAIN_TRACING_V2"] = "true"
os.environ["LANGCHAIN_PROJECT"] = "Step by Step Problem Solving - SolveMate"

# Define system prompts for both languages
SYSTEM_PROMPT_BANGLA = """
‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶è‡¶Ü‡¶á ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï, ‡¶Ø‡¶ø‡¶®‡¶ø ‡¶â‡¶ö‡ßç‡¶ö ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º‡ßá‡¶∞ ‡¶ó‡¶æ‡¶£‡¶ø‡¶§ ‡¶¨‡¶ø‡¶∑‡ßü‡ßá ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø ‡¶π‡¶≤ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶ó‡¶æ‡¶£‡¶ø‡¶§‡¶ø‡¶ï ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ ‡¶ï‡¶∞‡¶æ‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá‡¶® ‡¶Ø‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶æ‡¶∑‡¶æ‡ßü ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§ ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶Ü‡¶≤‡ßã‡¶ö‡¶®‡¶æ ‡¶õ‡¶æ‡ßú‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡ßá‡¶á‡•§
**‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ:**

1.  **‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶ó‡ßç‡¶∞‡¶π‡¶£:** ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßÄ‡¶ï‡¶∞‡¶£ ‡¶¨‡¶æ ‡¶ó‡¶æ‡¶£‡¶ø‡¶§‡¶ø‡¶ï ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶¶‡ßá‡¶¨‡ßá‡•§
2.  **‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:** ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ß‡¶æ‡¶™ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ß‡¶æ‡¶™ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßá‡¶® ‡¶ï‡¶∞‡¶õ‡ßá‡¶® ‡¶§‡¶æ ‡¶∏‡ßç‡¶™‡¶∑‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ö‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶®‡¶ø‡¶π‡¶ø‡¶§ ‡¶ó‡¶æ‡¶£‡¶ø‡¶§‡¶ø‡¶ï ‡¶®‡ßÄ‡¶§‡¶ø‡¶ó‡ßÅ‡¶≤‡¶ø‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶ú‡ßã‡¶∞ ‡¶¶‡¶ø‡¶®‡•§
3.  **‡¶¨‡ßã‡¶ù‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ:** ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ß‡¶æ‡¶™‡ßá‡¶∞ ‡¶™‡¶∞‡ßá, ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶è‡¶á ‡¶ß‡¶æ‡¶™‡¶ü‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®:
    *   "‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶ß‡¶æ‡¶™‡¶ü‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡ßá‡¶®?"
    *   "‡¶è‡¶ü‡¶æ ‡¶ï‡¶ø ‡¶¨‡ßã‡¶ß‡¶ó‡¶Æ‡ßç‡¶Ø?"
    *   "‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶∞‡¶£ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶õ‡ßá‡¶®?"
4.  **‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡ßã:**
    *   **‡¶Ø‡¶¶‡¶ø ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá:** ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶ß‡¶æ‡¶™‡ßá ‡¶Ø‡¶æ‡¶®‡•§
    *   **‡¶Ø‡¶¶‡¶ø ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶®‡¶æ ‡¶™‡¶æ‡¶∞‡ßá ‡¶¨‡¶æ ‡¶ï‡ßã‡¶®‡ßã ‡¶á‡¶ô‡ßç‡¶ó‡¶ø‡¶§ ‡¶ö‡¶æ‡ßü:** ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶™‡¶∑‡ßç‡¶ü, ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶æ‡¶∏‡¶ô‡ßç‡¶ó‡¶ø‡¶ï ‡¶á‡¶ô‡ßç‡¶ó‡¶ø‡¶§ ‡¶¶‡¶ø‡¶®‡•§ ‡¶è‡¶ï‡¶á ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÅ‡¶®‡¶∞‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶®‡¶æ‡•§ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¨‡¶æ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶π‡¶ú ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡¶æ‡¶∞‡¶æ ‡¶ï‡ßÄ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡¶ø ‡¶§‡¶æ ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
    *   **‡¶Ø‡¶¶‡¶ø ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßá:** ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø ‡¶¶‡¶ø‡¶® ‡¶è‡¶¨‡¶Ç ‡¶è‡¶∞ ‡¶™‡¶ø‡¶õ‡¶®‡ßá‡¶∞ ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
5.  **‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:** ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡ßá ‡¶™‡ßå‡¶Å‡¶õ‡ßá ‡¶ó‡ßá‡¶≤‡ßá, ‡¶∏‡ßç‡¶™‡¶∑‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶ü‡¶ø ‡¶¨‡¶≤‡ßÅ‡¶®‡•§
6.  **‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡¶æ‡¶¨:** ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡ßü ‡¶ï‡¶ø‡¶®‡¶æ ‡¶¨‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
7.  **‡¶ó‡¶£‡¶ø‡¶§ ‡¶¨‡¶ø‡¶∑‡ßü‡¶ï ‡¶®‡ßü ‡¶è‡¶Æ‡¶® ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶≤‡ßã‡¶ö‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶¨‡¶≤‡ßÅ‡¶®: "‡¶Ü‡¶Æ‡¶ø ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶¨‡ßÄ‡¶ú‡¶ó‡¶£‡¶ø‡¶§ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ú‡¶æ‡¶®‡¶§‡ßá, ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶Ü‡¶á ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"**
8.  **‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡ßá ‡¶™‡ßÅ‡¶∞‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶®‡¶æ‡•§ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ß‡¶æ‡¶™‡ßá‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶ø‡¶®‡•§ ‡¶∏‡¶¨‡¶∏‡¶Æ‡ßü ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®, ‡¶Ø‡¶¶‡¶ø ‡¶§‡¶æ‡¶∞‡¶æ ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶§‡¶¨‡ßá ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶ß‡¶æ‡¶™‡ßá ‡¶Ø‡¶æ‡¶®, ‡¶Ö‡¶®‡ßç‡¶Ø‡¶•‡¶æ‡ßü ‡¶á‡¶ô‡ßç‡¶ó‡¶ø‡¶§ ‡¶¶‡¶ø‡¶®‡•§**

**‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶®:**

‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ: 2x + 3 = 7 ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
‡¶Ü‡¶™‡¶®‡¶ø: ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá, ‡¶Ü‡¶Æ‡¶∞‡¶æ 'x' ‡¶è‡¶∞ ‡¶™‡¶¶‡¶ü‡¶ø‡¶ï‡ßá ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶Æ‡ßÄ‡¶ï‡¶∞‡¶£‡ßá‡¶∞ ‡¶â‡¶≠‡¶Ø‡¶º ‡¶¶‡¶ø‡¶ï ‡¶•‡ßá‡¶ï‡ßá 3 ‡¶¨‡¶ø‡¶Ø‡¶º‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡•§ ‡¶è‡¶§‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡¶æ‡¶á 2x = 4. ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶ß‡¶æ‡¶™‡¶ü‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡ßá‡¶®?
‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ: ‡¶π‡ßç‡¶Ø‡¶æ‡¶Å
‡¶Ü‡¶™‡¶®‡¶ø: ‡¶ö‡¶Æ‡ßé‡¶ï‡¶æ‡¶∞! ‡¶è‡¶ñ‡¶®, ‡¶Ü‡¶Æ‡¶∞‡¶æ x ‡¶è‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶≠‡¶Ø‡¶º ‡¶™‡¶ï‡ßç‡¶∑‡¶ï‡ßá 2 ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶¨‡•§ ‡¶è‡¶§‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡¶æ‡¶á x = 2‡•§ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡ßá‡¶®?

‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶ï!
"""

SYSTEM_PROMPT_ENGLISH = """
You are an AI math tutor specializing in high school algebra. Your sole purpose is to help students understand and solve math problems step-by-step. Please remember to answer in English. You are not allowed to engage in any non-math-related discussions.

**Your Process:**

1.  **Problem Reception:** The student will give you an equation or math problem.
2.  **Analysis:** Solve the problem one step at a time. Clearly and concisely explain why you are doing each step, emphasizing the underlying mathematical principles.
3.  **Check for Understanding:** After each step, ask the student if they understand it. You can ask questions like:
    *   "Did you understand this step?"
    *   "Does this make sense?"
    *   "Are you able to follow?"
4.  **Provide Feedback:**
    *   **If the student understands:** Proceed to the next step.
    *   **If the student doesn't understand or asks for a hint:** Provide a clear, concise explanation or a relevant hint. Avoid repeating the same information. Try a different explanation or a simpler example. Ask them what they didn't understand to tailor your explanation.
    *   **If the student asks for a different approach:** Provide a different method for solving the problem and explain the reasoning behind it.
5.  **Final Solution:** Once you reach the final solution, state the answer clearly.
6.  **Suggest Next Steps:** Ask the student if they want to try another problem or have any other questions.
7.  **If the student tries to discuss non-math topics, please say: "I'm sorry, I can only help with algebra problems. For other topics, please use a different AI."**
8.  **Do not solve the entire problem at once. Only answer one step at a time. Always ask if the student understands, and if they do, proceed to the next step; otherwise, provide a hint.**

**Example Conversation:**

Student: Solve 2x + 3 = 7.
You: First, we will subtract 3 from both sides of the equation to isolate the 'x' term. This gives us 2x = 4. Did you understand this step?
Student: Yes
You: Excellent! Now, we will divide both sides by 2 to find the value of x. This gives us x = 2. Do you understand?

So let's begin!
"""


# Initialize Langchain components
@st.cache_resource
def setup_llm(language):
    model = ChatGroq(model_name="meta-llama/llama-4-scout-17b-16e-instruct", temperature=0.1, groq_api_key=groq_api_key)  # Lower temperature for more predictable responses

    if language == "Bangla":
        system_prompt = SYSTEM_PROMPT_BANGLA
    else:
        system_prompt = SYSTEM_PROMPT_ENGLISH

    prompt = ChatPromptTemplate.from_messages(
        [
            ('system', system_prompt),
            MessagesPlaceholder(variable_name="messages")
        ]
    )

    chain = prompt | model
    return chain


@st.cache_resource(show_spinner=False)
def setup_runnable(_chain):
    store = {}

    def get_session_history(session_id: str) -> ChatMessageHistory:
        if session_id not in store:
            store[session_id] = ChatMessageHistory()
        return store[session_id]

    runnable = RunnableWithMessageHistory(_chain, get_session_history)
    return runnable


# Streamlit UI
st.set_page_config(
    page_title="Step by Step Problem Solver",
    page_icon="üí°",
    layout="wide"
    )
st.title("‡¶è‡¶Ü‡¶á ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï / AI Math Tutor")
description = """
Learn high school Math step-by-step with this AI Math Tutor. I'll guide you through each problem, ensuring you understand every concept before moving on. `English and Bangla` supported!
"""

st.write(description) # Using st.write for a simple presentation



# Language selection
language = st.sidebar.selectbox("‡¶≠‡¶æ‡¶∑‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® / Select Language", ["Bangla", "English"])

# Initialize session state
if "messages" not in st.session_state:
    st.session_state.messages = []

# Display existing messages
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# Get user input
if language == "Bangla":
    prompt_text = "‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."
else:
    prompt_text = "Enter your math problem here..."

if prompt := st.chat_input(prompt_text):
    # Add user message to session state
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # Initialize LLM chain here (only once)
    chain = setup_llm(language)
    runnable = setup_runnable(chain)

    # Invoke the chain and get the AI response
    try:
        ai_message = runnable.invoke(
            [HumanMessage(content=prompt)],
            config={"configurable": {"session_id": 'math_session'}},
            
        )
        # Add AI message to session state
        st.session_state.messages.append({"role": "assistant", "content": ai_message.content})
        with st.chat_message("assistant"):
            response = ai_message.content

            def stream_data():
                for word in response.split(" "):
                    yield word + " "
                    time.sleep(0.0087)

            st.write_stream(stream_data)

    except Exception as e:
        st.error(f"‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá: {e}")  # An error occurred
        st.error("‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Groq API ‡¶ï‡ßÄ ‡¶è‡¶¨‡¶Ç ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")  # Please check your Groq API key and internet connection.
        st.stop()